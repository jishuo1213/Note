build openssl to wasm

1: emconigure ./Configure linux-x32 no-asm no-threads no-tests no-dso no-engine no-hw   --prefix=/home/fan//Tools/TASSL-1.1.1b/emcc-build-v2
2: sed -i 's|^CROSS_COMPILE.*$|CROSS_COMPILE=|g' Makefile
3: emmake make
4: emmake make install



BasedOnStyle: Chromium
IndentWidth: 4
ColumnLimit: 120
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      false
  AfterControlStatement: Never
  AfterEnum:       false
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  AfterExternBlock: false
  BeforeCatch:     false
  BeforeElse:      false
  BeforeLambdaBody: false
  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BreakBeforeBraces: Custom
BinPackArguments: true
BinPackParameters: true
PointerAlignment: Right

BraceWrapping:
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: true
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  #AfterExternBlock: false # Unknown to clang-format-5.0
  BeforeCatch: false
  BeforeElse: false
  IndentBraces: false
  
  
  // 将键绑定放在此文件中以覆盖默认值auto[]
[
    {
        "key": "alt+c",
        "command": "-WeCode.copy_file_name"
    },
    {
        "key": "alt+c",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+c",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+z",
        "command": "redo"
    },
    {
        "key": "ctrl+y",
        "command": "-redo"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "shift+alt+r",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-StaticCheck.CodeCheckFileCheck"
    },
    {
        "key": "ctrl+alt+c",
        "command": "copyFileName",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "-copyFileName",
        "when": "!editorFocus"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.showAccessibilityHelp"
    },
    {
        "key": "alt+f1",
        "command": "WeCode.addHighlight"
    },
    {
        "key": "f8",
        "command": "-WeCode.addHighlight"
    },
    {
        "key": "alt+f2",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "f7",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-StaticCheck.WebuildBasedFileCheck"
    },
    {
        "key": "ctrl+alt+r",
        "command": "revealFileInOS"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+shift+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "shift+alt+u",
        "command": "editor.action.transformToLowercase"
    }
]


"editor.fontSize": 18,
    "editor.fontFamily": "Source Code Pro",
    "editor.hideEditorTitleMenu": [],
    "[cpp]": {
        "editor.defaultFormatter": "mjohns.clang-format"
    },
    "workbench.list.openMode": "doubleClick",
    "explorer.confirmDelete": false,
    "explorer.autoReveal": "focusNoScroll",
    "editor.minimap.enabled": false,
    "workbench.editor.wrapTabs": true,
    // "editor.wordWrap": "on",
    "CodeCheck.RealTimeFixbotCheck.Enable": false,
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#49b2b93d",//修改光标所在行的背景色
        "editor.lineHighlightBorder": "#ffffff30",     //修改光标所在行的边框色
        "editorRuler.foreground": "#ff4081"
    }
    
    "editor.rulers": [
        120
    ],
    "editor.wordWrapColumn": 120,

